{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8038313F74D3491e9F0829Ad51b236728B680C72",
      "txHash": "0x91004948c1a5b8c2003348f8de17e739b422cc856a6039e9fc6435692afd8423",
      "kind": "uups"
    }
  ],
  "impls": {
    "45844883b81a30cec1b976b43a769c329a5afd7645294888c1a7b0a356033ff9": {
      "address": "0x711681b6Bd32ab5fAd917Ac984b04Ba21A51aB8B",
      "txHash": "0x4d285710560bd23c68766a2dde029d7cb339435e5c3678257b3b2e8d14a4bbef",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3225_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "label": "harvestLog",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_struct(Harvest)7191_storage)dyn_storage",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:27"
          },
          {
            "label": "harvestLogCadence",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:28"
          },
          {
            "label": "lastHarvestTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:29"
          },
          {
            "label": "upgradeProposalTime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:31"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:45"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:46"
          },
          {
            "label": "strategistRemitter",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:47"
          },
          {
            "label": "totalFee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:73"
          },
          {
            "label": "callFee",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:74"
          },
          {
            "label": "treasuryFee",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:75"
          },
          {
            "label": "strategistFee",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:76"
          },
          {
            "label": "securityFee",
            "offset": 0,
            "slot": "362",
            "type": "t_uint256",
            "contract": "ReaperBaseStrategyv1_1",
            "src": "contracts\\abstract\\ReaperBaseStrategyv1_1.sol:77"
          },
          {
            "label": "want",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "ReaperStrategyLiquidDriverDeus",
            "src": "contracts\\ReaperStrategyLiquidDriverDeus.sol:35"
          },
          {
            "label": "wftmToLP0Route",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyLiquidDriverDeus",
            "src": "contracts\\ReaperStrategyLiquidDriverDeus.sol:42"
          },
          {
            "label": "wftmToLP1Route",
            "offset": 0,
            "slot": "365",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ReaperStrategyLiquidDriverDeus",
            "src": "contracts\\ReaperStrategyLiquidDriverDeus.sol:43"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "ReaperStrategyLiquidDriverDeus",
            "src": "contracts\\ReaperStrategyLiquidDriverDeus.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Harvest)7191_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv1_1.Harvest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3225_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3225_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2924_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Harvest)7191_storage": {
            "label": "struct ReaperBaseStrategyv1_1.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2924_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
